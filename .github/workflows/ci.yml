
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: '[${{ matrix.test_type }}@#${{ matrix.docker_image }}]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_type:
          - "cpp"
          - "python"
        docker_image:
          - "archlinux:base"
          - "fedora:37"
          - "fedora:38"
          - "fedora:39"
          - "ubuntu:22.04"
          - "ubuntu:23.04"
          - "ubuntu:23.10"
          - "debian:bookworm"
          - "debian:trixie"
          - "debian:sid"

    container:
      image: ${{ matrix.docker_image }}

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies and set library name [Debian-based]
        if: contains(matrix.docker_image, 'ubuntu') || contains(matrix.docker_image, 'debian') 
        run: |
          apt update -y
          apt upgrade -y
          apt install -y python-is-python3 libgomp1 build-essential
          echo "GOMP_LIBRARY_NAME=/usr/lib/x86_64-linux-gnu/libgomp.so.1" >> $GITHUB_ENV
          echo "PYTHON_EXECUTABLE=python3" >> $GITHUB_ENV

      - name: Install dependencies and set library name [Fedora-based]
        if: contains(matrix.docker_image, 'fedora') 
        run: |
          dnf install -y python3 libgomp gcc
          echo "GOMP_LIBRARY_NAME=/usr/lib64/libgomp.so.1" >> $GITHUB_ENV
          echo "PYTHON_EXECUTABLE=python3" >> $GITHUB_ENV

      - name: Install dependencies and set library name [arch-based]
        if: contains(matrix.docker_image, 'archlinux') 
        run: |
          pacman --noconfirm -Sy gcc-libs python gcc
          echo "GOMP_LIBRARY_NAME=/usr/lib/libgomp.so.1" >> $GITHUB_ENV
          echo "PYTHON_EXECUTABLE=python3" >> $GITHUB_ENV

      - name: Try to create segfault [Python]
        if: contains(matrix.test_type, 'python')
        run: |
          ${PYTHON_EXECUTABLE} -c "import ctypes; import os; ctypes._dlopen(os.environ['GOMP_LIBRARY_NAME'], os.RTLD_DEEPBIND)"

      - name: Try to create segfault [C++]
        if: contains(matrix.test_type, 'cpp')
        run: |
          gcc test.c -o ./test
          ./test ${GOMP_LIBRARY_NAME}
